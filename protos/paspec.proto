syntax = "proto3";
package pa;

// Modes for asset issuance
enum Mode {
  NONE   = 0x00; // No issuance allowed
  ONCE   = 0x01; // Only one issuance transaction from asset owner allowed
  MULTI  = 0x02; // Multiple issuance transactions from asset owner allowed
  MONO   = 0x04; // All card transaction amounts are equal to 1, number_of_decimals is ignored
  UNFLUSHABLE  = 0x08; // No card transfer transactions allowed except for the card-issue transaction
  // SINGLET is a combination of ONCE and MONO (0x02 | 0x08)
  SINGLET = 0x05; // Singlet deck, one MONO card issunce allowed. (ONCE | MONO) - suitable for NFT tokens
  // there can be more combinations
}


// Meta-data message for the deck spawn transaction
message Deck {
  // Protocol version number
  uint32 version = 1;

  // Name for the registered asset
  string name = 2;

  // Number of decimals to define how much an asset can divided
  uint32 number_of_decimals = 3;

  Mode issue_mode = 4;

  // Free form asset specific data (optional)
  bytes metadata = 5;

}

// Transaction data for:
// - Card transfer transaction
// - Card issue transaction
// - Card burn transaction
message Card {
  // Protocol version number
  uint32 version = 1;

  // Amount to transfer
  repeated uint64 amount = 2;

  // Free form asset specific data (optional)
  bytes metadata = 3;
}
